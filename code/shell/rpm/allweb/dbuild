#!/bin/bash

# webpath="/root/github/dview"
webpath=""
target="x86_64"
VERSION="1.0.0"
RELEASE="1000"
RELEASE_DIR=~/dview-release

# --- help info 显示帮助信息
function showUsage() {
  echo
  echo "description: build rpm package for dview."
  echo "command: bash dbuild [--param] "
  echo " |"
  echo " |______ param: [--help | -h] => show usage info."
  echo " |______ param: [--webpath ] [path/to/dview] => build rpm package for dview."
  echo " |______ param: [--version | -v  ] [version] => specified a version number(the default is 1.0.0)"
  echo " |______ param: [--release | -r  ] [release] => specified a release number(the default is 1001.el7)"
  echo " |______ param: [--target | -t  ] [target] => specified a compile target(the default is x86_64)"
  echo " |"
  echo " |______ example: bash dbuild --help"
  echo " |______ example: bash dbuild -h"
  echo " |______ example: bash dbuild --webpath /root/github/dview"
  echo " |______ example: bash dbuild --webpath /root/github/dview --version 1.0.1"
  echo " |______ example: bash dbuild --webpath /root/github/dview --release 1002"
  echo " |______ example: bash dbuild --webpath /root/github/dview --version 1.0.1 --release 1002 --target arm64"
  echo
}

while [ -n "$1" ]; do
  case "$1" in
    --help | -h )
    showUsage
    exit 0
    ;;
    --webpath | --path )
    webpath="$2"
    shift
    ;;
    --version | -v )
    VERSION="$2"
    shift
    ;;
    --release | -r )
    RELEASE="$2"
    shift
    ;;
    --target | -t )
    target="$2"
    shift
    ;;
  esac
  shift
done

dirname="`pwd`"
DATE="$(date +%F)"
node_package="node-v8-linux-$target.tar.gz"
RELEASE_NAME="dview-${VERSION}"
BUNDLE_PATH="/root/${RELEASE_NAME}"

# --- warning / success
function fLog(){
  if [ "${1}" -ne 0 ]
  then
    echo
    printf "\033[1;31m%b\033[0m" " ${2} \n"
    echo
  else
    echo
    printf "\033[1;32m%b\033[0m" "${2} \n"
    echo
  fi
}

# --- clean build dir
function clean() {
  rm ~/rpmbuild/BUILD/* -rf
  rm ${BUNDLE_PATH} -rf
}

# --- be prepared for rpm build
function configure() {
  mkdir -p "${BUNDLE_PATH}"
  mkdir -p ~/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}

  # Makefile
  cp ./conf/Makefile ${BUNDLE_PATH} -f

  # dview
  fLog 0 ">>> update dview and run npm install : [$webpath/node-express-react]"
  cd $webpath/node-express-react && git reset --hard HEAD && git pull && cd -

  fLog 0 ">>> copy file : [$webpath/node-express-react]"
  npm run gulp-clean
  cp $webpath/node-express-react ./origin -rf
  # gulp workflow
  # npm run gulp-build
  # copy
  cp ./origin/node-express-react ${BUNDLE_PATH} -rf
  rm ${BUNDLE_PATH}/node-express-react/node_modules -rf

  fLog 0 ">>> copy file : [$webpath/web]"
  cp $webpath/web ${BUNDLE_PATH} -rf
  rm ${BUNDLE_PATH}/web/node_modules -rf
  # update web-dist files
  cp $webpath/web/dist ${BUNDLE_PATH}/node-express-react/public/ -rf

  # node_modules
  tar -xf ${BUNDLE_PATH}/node-express-react/node_modules.tar.gz -C ${BUNDLE_PATH}/node-express-react
  # mongodb
  # fLog 0 ">>> copy file : [mongodb-linux-x86_64-rhel70-3.6.4]"
  # tar -xf ./resources/mongodb-linux-x86_64-rhel70-3.6.4.tar.gz -C "${BUNDLE_PATH}"
  # node
  fLog 0 ">>> copy file : [$node_package]"
  tar -xf ./resources/$node_package -C ${BUNDLE_PATH}

  # tar
  fLog 0 ">>> build file : [${RELEASE_NAME}.tar.gz]"
  tar -czf ~/rpmbuild/SOURCES/${RELEASE_NAME}.tar.gz -C /root ${RELEASE_NAME}
}

# --- build rpm
function build() {
  fLog 0 ">>> run rpmbuild ... "
  # specified dview.spec
  sed -i '/%define _version/d' conf/dview.spec
  sed -i "/%define name/a %define _version $VERSION" conf/dview.spec
  sed -i '/%define _release/d' conf/dview.spec
  sed -i "/%define name/a %define _release $RELEASE" conf/dview.spec

  # build dview.spec
  rpmbuild -ba ./conf/dview.spec --target $target
}

# --- release rpm
function release() {
  local _name=$1
  local _dir=$2
  local origin_dir=~/rpmbuild/RPMS/$target

  mkdir -p ${_dir}
  mv ${origin_dir}/${RELEASE_NAME}-${RELEASE}.el7.$target.rpm $_dir/

  fLog 0 ">>> get the dview rpmpackage in $_dir/${RELEASE_NAME}-${RELEASE}.el7.$target.rpm"
}



# --- MAIN ---
function Main() {
  if [ -z "$webpath" ]; then
    fLog 1 "the param [webpath] is necessary, it's a path of dview code directory."
    exit 1
  fi

  # -
  clean
  # -
  configure
  # -
  build
  # -
  release $RELEASE_NAME $RELEASE_DIR
}

Main
